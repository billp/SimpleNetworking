{
  "warnings": [
    {
      "file": "/Users/billpanagiotopoulos/Projects/TermiNetwork/Source/Protocols/TNRouteProtocol.swift",
      "line": 22,
      "symbol": "TNRouteProtocol",
      "symbol_kind": "source.lang.swift.decl.protocol",
      "warning": "undocumented"
    },
    {
      "file": "/Users/billpanagiotopoulos/Projects/TermiNetwork/Source/Protocols/TNRouteProtocol.swift",
      "line": 23,
      "symbol": "TNRouteProtocol.configure()",
      "symbol_kind": "source.lang.swift.decl.function.method.instance",
      "warning": "undocumented"
    },
    {
      "file": "/Users/billpanagiotopoulos/Projects/TermiNetwork/Source/SwiftUI/TNImage.swift",
      "line": 24,
      "symbol": "PreprocessImageType",
      "symbol_kind": "source.lang.swift.decl.typealias",
      "warning": "undocumented"
    },
    {
      "file": "/Users/billpanagiotopoulos/Projects/TermiNetwork/Source/SwiftUI/TNImage.swift",
      "line": 72,
      "symbol": "TNImage",
      "symbol_kind": "source.lang.swift.decl.struct",
      "warning": "undocumented"
    },
    {
      "file": "/Users/billpanagiotopoulos/Projects/TermiNetwork/Source/SwiftUI/TNImage.swift",
      "line": 84,
      "symbol": "TNImage.init(withUrl:configuration:preprocessImage:)",
      "symbol_kind": "source.lang.swift.decl.function.method.instance",
      "warning": "undocumented"
    },
    {
      "file": "/Users/billpanagiotopoulos/Projects/TermiNetwork/Source/TNCache.swift",
      "line": 25,
      "symbol": "TNCache.shared",
      "symbol_kind": "source.lang.swift.decl.var.static",
      "warning": "undocumented"
    },
    {
      "file": "/Users/billpanagiotopoulos/Projects/TermiNetwork/Source/TNConfiguration.swift",
      "line": 59,
      "symbol": "TNConfiguration.init(cachePolicy:timeoutInterval:requestBodyType:certificatePaths:verbose:headers:mockDataBundle:useMockData:mockDelay:keyDecodingStrategy:errorHandlers:)",
      "symbol_kind": "source.lang.swift.decl.function.method.instance",
      "warning": "undocumented"
    },
    {
      "file": "/Users/billpanagiotopoulos/Projects/TermiNetwork/Source/TNConfiguration.swift",
      "line": 102,
      "symbol": "TNConfiguration.copy(with:)",
      "symbol_kind": "source.lang.swift.decl.function.method.instance",
      "warning": "undocumented"
    },
    {
      "file": "/Users/billpanagiotopoulos/Projects/TermiNetwork/Source/TNEnvironment.swift",
      "line": 46,
      "symbol": "TNEnvironment.current",
      "symbol_kind": "source.lang.swift.decl.var.static",
      "warning": "undocumented"
    },
    {
      "file": "/Users/billpanagiotopoulos/Projects/TermiNetwork/Source/TNErrors.swift",
      "line": 63,
      "symbol": "TNError.localizedDescription",
      "symbol_kind": "source.lang.swift.decl.var.instance",
      "warning": "undocumented"
    },
    {
      "file": "/Users/billpanagiotopoulos/Projects/TermiNetwork/Source/TNOperation.swift",
      "line": 35,
      "symbol": "TNOperation.isExecuting",
      "symbol_kind": "source.lang.swift.decl.var.instance",
      "warning": "undocumented"
    },
    {
      "file": "/Users/billpanagiotopoulos/Projects/TermiNetwork/Source/TNOperation.swift",
      "line": 49,
      "symbol": "TNOperation.isFinished",
      "symbol_kind": "source.lang.swift.decl.var.instance",
      "warning": "undocumented"
    },
    {
      "file": "/Users/billpanagiotopoulos/Projects/TermiNetwork/Source/TNRequest.swift",
      "line": 30,
      "symbol": "TNMethod.get",
      "symbol_kind": "source.lang.swift.decl.enumelement",
      "warning": "undocumented"
    },
    {
      "file": "/Users/billpanagiotopoulos/Projects/TermiNetwork/Source/TNRequest.swift",
      "line": 31,
      "symbol": "TNMethod.head",
      "symbol_kind": "source.lang.swift.decl.enumelement",
      "warning": "undocumented"
    },
    {
      "file": "/Users/billpanagiotopoulos/Projects/TermiNetwork/Source/TNRequest.swift",
      "line": 32,
      "symbol": "TNMethod.post",
      "symbol_kind": "source.lang.swift.decl.enumelement",
      "warning": "undocumented"
    },
    {
      "file": "/Users/billpanagiotopoulos/Projects/TermiNetwork/Source/TNRequest.swift",
      "line": 33,
      "symbol": "TNMethod.put",
      "symbol_kind": "source.lang.swift.decl.enumelement",
      "warning": "undocumented"
    },
    {
      "file": "/Users/billpanagiotopoulos/Projects/TermiNetwork/Source/TNRequest.swift",
      "line": 34,
      "symbol": "TNMethod.delete",
      "symbol_kind": "source.lang.swift.decl.enumelement",
      "warning": "undocumented"
    },
    {
      "file": "/Users/billpanagiotopoulos/Projects/TermiNetwork/Source/TNRequest.swift",
      "line": 35,
      "symbol": "TNMethod.connect",
      "symbol_kind": "source.lang.swift.decl.enumelement",
      "warning": "undocumented"
    },
    {
      "file": "/Users/billpanagiotopoulos/Projects/TermiNetwork/Source/TNRequest.swift",
      "line": 36,
      "symbol": "TNMethod.options",
      "symbol_kind": "source.lang.swift.decl.enumelement",
      "warning": "undocumented"
    },
    {
      "file": "/Users/billpanagiotopoulos/Projects/TermiNetwork/Source/TNRequest.swift",
      "line": 37,
      "symbol": "TNMethod.trace",
      "symbol_kind": "source.lang.swift.decl.enumelement",
      "warning": "undocumented"
    },
    {
      "file": "/Users/billpanagiotopoulos/Projects/TermiNetwork/Source/TNRequest.swift",
      "line": 38,
      "symbol": "TNMethod.patch",
      "symbol_kind": "source.lang.swift.decl.enumelement",
      "warning": "undocumented"
    },
    {
      "file": "/Users/billpanagiotopoulos/Projects/TermiNetwork/Source/TNRequest.swift",
      "line": 153,
      "symbol": "TNRequest.init(route:environment:)",
      "symbol_kind": "source.lang.swift.decl.function.method.instance",
      "warning": "undocumented"
    },
    {
      "file": "/Users/billpanagiotopoulos/Projects/TermiNetwork/Source/TNRequest.swift",
      "line": 262,
      "symbol": "TNRequest.start()",
      "symbol_kind": "source.lang.swift.decl.function.method.instance",
      "warning": "undocumented"
    }
  ],
  "source_directory": "/Users/billpanagiotopoulos/Projects/TermiNetwork"
}